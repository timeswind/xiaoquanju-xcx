<!--地址管理-->
<template>
  <view class="{{currentPage===0?'':'hidden'}}">
    <addressList :list.sync="addressList" @currentPage.user="getCurrentPage"></addressList>
  </view>
  <view class="{{currentPage===1?'':'hidden'}}">
    <addressAdd @currentPage.user="getCurrentPage"></addressAdd>
  </view>
  <view class="{{currentPage===2?'':'hidden'}}">
    <addressEdit @currentPage.user="getCurrentPage" ></addressEdit>
  </view>
</template>
<script>
import wepy from "wepy";
import AddressList from "../components/address_list";
import AddressAdd from "../components/address_add";
import AddressEdit from "../components/address_edit";
import api from "@/api/api";
import tip from "@/utils/tip";
import { USER_SPECICAL_INFO } from "@/utils/constant";
export default class Address extends wepy.page {
  config = {
    navigationBarTitleText: "地址管理"
  };
  data = {
    addressList: [],
    receiverInfo: {},
    //显示当前组件 0 列表 1新增 2编辑
    currentPage: 0,
    type: "" //哪个页面跳转过来的
  };

  async getUserAddress(phone, code) {
    // let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    // let openId = userSpecialInfo.openid;
    const json = await api.getUserAddress();

    if (json.data.success) {
      this.addressList = json.data.addresses;
    }

    this.$apply();
    this.showLoading = false;
  }

  components = {
    addressList: AddressList,
    addressAdd: AddressAdd,
    addressEdit: AddressEdit
  };

  onLoad(option) {
    this.currentPage = 0;
    this.type = option.type == undefined ? "" : option.type;
    this.$invoke("addressList", "setOrgType", this.type);
  }

  onShow() {
    this.getUserAddress();
  }

  methods = {
    getCurrentPage(page, data) {
      this.currentPage = page;
      if (page === 2) {
        this.$invoke("addressEdit", "refresh", data);
        console.log(data);
      }
    }
  };
  onUnload() {}
  events = {
    refreshAddList(msg) {
      this.getUserAddress();
    }
  };
}
</script>
<style lang="less">
.hidden {
  display: none;
}
</style>
