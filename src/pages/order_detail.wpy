<!--订单详情-->
<template>
  <view class="order_detail">
  <!-- <navigator class="item_content" url="/pages/logistics?orderNo={{orderNo}}">
    <view class="order_state" wx:if="{{obj.status==2 || obj.status==1}}">
      <view class="left">
        <i class="iconfont icon-complete"></i>
      </view>

      <view class="center">
        <view class="state_doc">{{expressFlowInfo.flowName}}</view>
        <view class="state_time">{{expressFlowInfo.updateTime}}</view>
      </view>

      <view class="right">
        <view>&gt;</view>
      </view>

    </view>
  </navigator> -->
    <view class="order_state" wx:if="{{obj.status==0}}">
      <view class="left">
        <view class="unpaid">
          <i class="iconfont icon-wait"></i>
          <text class="unpaid_doc">等待付款</text>
        </view>
      </view>
      <view class="right">
        <text class="time_doc">剩余时间:</text>
        <text class="time_num">59:30:30</text>
      </view>
    </view>
    <view class="address_block">
      <view class="name">
        <text class="title"> 收货人:</text>
        <text class="content">{{address.name}}\t\t{{address.phone}}</text>
      </view>
      <view class="address">
        <text class="title"> 收货地址:</text>
        <text class="content">{{address.street}} </text>
      </view>
    </view>
    <view class="goods_block">
      <shopItemList :goodsList.sync="list"></shopItemList>
    </view>
    <view class="info_block">
      <view class="item">
        <text class="title">订单编号: </text>
        <text class="content">{{order_id}}</text>
      </view>
      <view class="item">
        <text class="title">提交时间: </text>
        <text class="content">{{order_detail.created_at}}</text>
      </view>
      <view class="item" wx:if="{{order_detail.order_passed_hours > 0.5}}">
        <text class="title">订单关闭: </text>
        <text class="content">订单超时</text>
      </view>
      <view class="item" wx:if="{{order_detail.pay_at}}">
        <text class="title">支付方式: </text>
        <text class="content">{{order_detail.payment_type === 'wechatpay' && '微信支付'}}</text>
      </view>
      <view class="item" wx:if="{{order_detail.pay_at}}">
        <text class="title">付款时间: </text>
        <text class="content">{{order_detail.pay_at}}</text>
      </view>
    </view>
    <view class="footer" wx:if="{{order_detail.order_passed_hours <= 0.5}}">
      <view class="money">应付款:
        <text class="receive_money">{{'￥' + order_detail.total_fee}}</text>
      </view>
      <view class="btn_group">
        <text wx:if="{{order_detail.status==='WAIT_SELLER_SEND_GOODS'}}">等待发货</text>
        <view class="btn type_pick dsh" @tap="payMoney" wx:if="{{order_detail.status==='WAIT_BUYER_PAY'}}">立即付款</view>
<!--<view class="btn" @tap="delOrder" wx:if="{{obj.status==0 || obj.status==4}}" data-id="{{obj.orderNo}}">删除订单</view>-->
        <!--<view class="btn type_pick dsh" @tap="refund" wx:if="{{obj.status==4}}" data-id="{{obj.orderNo}}">申请退货</view>-->
      </view>
    </view>
  </view>
</template>
<script>
import wepy from "wepy";
import tip from "@/utils/tip";
import ShopItemList from "@/components/shop_item_list";
import api from "@/api/api";
import { SYSTEM_INFO, USER_SPECICAL_INFO } from "@/utils/constant";
export default class OrderDetail extends wepy.page {
  config = {
    navigationBarTitleText: "订单详情"
  };
  data = {
    order_id: "",
    order_detail: {},
    address: {},
    wechat_pay_detail: {}
  };

  async wechatPay(order_id) {
    const json = await api.getPayParams({
      query: {
        order_id: order_id
      }
    });

    const paydata = json.data;
    if (paydata.success) {
      const params = paydata.params;
      try {
        let requestPayment = await wepy.requestPayment({
          timeStamp: params.timeStamp,
          nonceStr: params.nonceStr,
          package: params.package,
          signType: "MD5",
          paySign: params.paySign
        });
        if (requestPayment.errMsg === "requestPayment:ok") {
          tip.success("支付成功");
          wepy.redirectTo({
            url: "/pages/order?tab=0"
          });
        }
      } catch (error) {
        if (error.errMsg === "requestPayment:fail cancel") {
          tip.error("取消支付");
          wepy.redirectTo({
            url: "/pages/order?tab=1"
          });
        } else {
          tip.error("出错了");
          this.disablePayButton = false;
          this.$apply();
        }
      }
    } else {
      tip.error("出错了");
      this.disablePayButton = false;
      this.$apply();
    }
  }

  async getOrderInfo(currentPage, size) {
    const json = await api.getOrderDetail({
      query: {
        id: this.order_id
      }
    });

    if (json.data.success) {
      json.data.order_detail["order_passed_hours"] =
        Math.abs(new Date() - new Date(json.data.order_detail.created_at)) /
        36e5;
      this.order_detail = json.data.order_detail;
      const parsedAddressData = json.data.order_detail.address.split("|");
      var address = {
        name: parsedAddressData[0],
        phone: parsedAddressData[1],
        province: parsedAddressData[2],
        city: parsedAddressData[3],
        area: parsedAddressData[4],
        street: parsedAddressData[5]
      };
      this.address = address;
      this.wechat_pay_detail = json.data.wechat_pay_detail;
      this.$apply();
    }
  }
  components = {
    shopItemList: ShopItemList
  };
  onLoad(options) {
    //that.list = bb.result.products;
    this.order_id = options.id;
    this.getOrderInfo();
  }
  computed = {};
  methods = {
    payMoney() {
      this.wechatPay(this.order_id);
    }
  };

  events = {};
}
</script>
<style lang="less">
.order_detail {
  position: relative;
}

.order_state {
  padding: 35rpx 24rpx;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 10rpx;
  background: #fff;
  .iconfont {
    font-size: 40rpx;
    color: #6a6a6a;
  }
  .state_time {
    padding-top: 24rpx;
  }
  .center {
    flex: 1;
    margin-left: 50rpx;
  }
  .right {
    display: flex;
    align-items: center;
  }
  .unpaid {
    margin-left: 50rpx;
    .unpaid_doc {
      margin-left: 10rpx;
    }
  }
  .time_doc {
    font-size: 26rpx;
    color: #999;
  }
  .time_num {
    font-size: 26rpx;
    margin-right: 50rpx;
  }
}

.address_block {
  padding: 30rpx;
  background: #fff;
  margin-top: 10rpx;
  .address {
    padding-top: 20rpx;
  }
  .title {
    color: #858585;
  }
  .content {
    color: #000;
    padding-left: 24rpx;
  }
}

.goods_block {
  margin-top: 10rpx;
  background: #fff;
}

.info_block {
  margin-top: 10rpx;
  padding: 18rpx;
  background: #fff;
  .item {
    padding-top: 40rpx;
    .title {
      font-size: 28rpx;
    }
    .content {
      color: #808080;
      font-size: 28rpx;
    }
  }
}

.footer {
  position: fixed;
  bottom: 0rpx;
  height: 92rpx;
  background: #fff;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 18rpx;
  border-top: 1px solid #e6e6e6;
  .btn_group {
    display: flex;
    margin-right: 30rpx;
    .btn {
      padding: 20rpx 20rpx;
      border: 1px solid #cccccc;
      text-align: center;
      margin: 0 auto;
      width: 180rpx;
      -moz-border-radius: 10rpx;
      /* Firefox */
      -webkit-border-radius: 10rpx;
      /* Safari 和 Chrome */
      border-radius: 10rpx;
    }
    .dsh {
      margin-left: 20rpx;
    }
  }
  .receive_money {
    color: #ff4856;
  }
}
</style>
