<template name="cart-goods-list">
  <scroll-view class="goods-list">
    <repeat for="{{list}}" key="index" item="item">
      <view class="list_box">
        <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
          <!-- <view class="a-goods-conts {{item.ischecked? 'active':''}}"  > -->
          <view class="goods-info">
            <icon class="icon_check" type="success" color="{{item.isChecked?'red':'rgb(153,153,153)'}}" @tap.stop="selectTap" data-index="{{index}}" size="20" />
            <view class="img-box">
              <image src="{{imageCdnUrl+ item.price_set.image + '?' +  imageSuffix}}" class="img" />
            </view>
            <view class="text-box">
              <view class="goods-title">
                <navigator url="/pages/goods_detail?id={{item.good._id}}">
                  {{item.good.name}}
                </navigator>
              </view>
              <!--  -->
              <view class="lable">
                <view class="goods-lable">规格：{{item.price_set.name}}</view>
              </view>
              <view class="goods-price">¥ {{item.price_set.price}}</view>
              <view class="buy-num">
                <view class="jian-btn {{item.item_count===1? 'disabled' : ''}}" catchtap="jianBtnTap" data-index="{{index}}">-</view>
                  <input type="number" value="{{item.item_count}}" disabled/>
                <view class="jia-btn {{item.item_count===1000? 'disabled' : ''}}" catchtap="jiaBtnTap" data-index="{{index}}">+</view>
              </view>
            </view>
          </view>
          <!--   </view> -->
        </swipeDelete>
      </view>
    </repeat>
  </scroll-view>
  <view class="empty_cart" wx:if="{{list.length==0}}">
    <view class="empty_cart_text">购物车还是空的</view>
    <view class="shop_btn">
      <view class="block btn_group">
        <view class="btn get_store" @tap="goIndex">去逛逛</view>
      </view>
    </view>
  </view>
  <view class="jiesuan-box" wx:if="{{list.length>0}}">
    <view class="left-price">
      <view @tap.stop="selectAll" class="all_select_box">
        <icon type="success" size="20" color="{{allChecked?'red':'rgb(153,153,153)'}}" />
        <view class="all_select">全选</view>
      </view>
      <view class="total" hidden="{{noSelect}}">合计：¥ {{totalPrice}}</view>
    </view>
    <view class="to-pay-btn {{noSelect?'no-select':''}}" hidden="{{!saveHidden}}" bindtap="toPayOrder">去结算</view>
  </view>
</template>

<script>
import wepy from "wepy";
import api from "@/api/api";
import tip from "@/utils/tip";
import {
  USER_SPECICAL_INFO,
  IMAGE_CDN_URL,
  GOOD_IMAGE_SMALL_SQUARE_SUFFIX
} from "@/utils/constant";
import swipeDelete from "./common/wepy-swipe-delete";
export default class shopCart extends wepy.component {
  components = {
    swipeDelete
  };
  data = {
    list: [],
    noSelect: false,
    saveHidden: true,
    operating: false,
    imageCdnUrl: IMAGE_CDN_URL,
    imageSuffix: GOOD_IMAGE_SMALL_SQUARE_SUFFIX
  };

  computed = {
    totalPrice() {
      var price = 0;
      this.list.forEach(shopcart => {
        if (shopcart.isChecked) {
          price += shopcart.item_count * shopcart.price_set.price;
        }
      });
      return price;
    },
    allChecked() {
      var result = true;
      this.list.forEach(shopcart => {
        if (!!shopcart.isChecked === false) {
          result = false;
        }
      });
      return result;
    }
  };
  //获取购物车商品列表
  async getCartList() {
    const json = await api.getUserShopcarts();
    let data = json.data;
    if (data.success) {
      this.list = data.shopcarts;
    }
    this.$apply();
  }
  onLoad() {
    let that = this;
    this.operating = false;
  }

  async updateGoodNum(index, new_count) {
    var shopcart = this.list[index];
    var updates = {
      _id: shopcart._id,
      item_count: new_count
    };
    const json = await api.updateUserShopcart({
      query: updates,
      method: "PUT"
    });
    if (json.data.success) {
      this.list[index]["item_count"] = new_count;
    } else {
      tip.error(json.data.error);
    }
    this.operating = false;
    this.$apply();
  }

  async deleteShopcart(id) {
    const json = await api.deleteShopcart({
      query: {
        id: id
      },
      method: "DELETE"
    });

    if (json.data.success) {
      this.getCartList();
    }

    this.showLoading = false;
  }
  methods = {
    handleDelItem(itemData) {
      this.deleteShopcart(itemData._id);
    },
    selectTap(e) {
      var index = parseInt(e.currentTarget.dataset.index);
      if (this.list[index]["isChecked"]) {
        this.list[index]["isChecked"] = false;
      } else {
        this.list[index]["isChecked"] = true;
      }
      this.$apply();
    },
    selectAll() {
      if (this.allChecked) {
        for (var i = 0; i < this.list.length; i++) {
          this.list[i]["isChecked"] = false;
        }
      } else {
        for (var i = 0; i < this.list.length; i++) {
          this.list[i]["isChecked"] = true;
        }
      }
      this.$apply();
    },
    jianBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = e.currentTarget.dataset.index;
      var item_count = this.list[index].item_count;
      if (item_count > 1) {
        item_count--;
      } else {
        this.operating = false;
        return;
      }
      this.updateGoodNum(index, item_count);
    },
    jiaBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = e.currentTarget.dataset.index;
      var item_count = this.list[index].item_count;
      item_count++;
      this.updateGoodNum(index, item_count);
    },
    toPayOrder() {
      let purType = 1,
        prePurType = 1;
      let bOneType = true;
      let index = 0;
      for (var i = 0; i < this.list.length; i++) {
        if (this.list[i].ischecked) {
          purType = this.list[i].type;
          if (index > 0) {
            if (purType != prePurType) {
              bOneType = false;
              break;
            }
          }
          prePurType = purType;
          index++;
        }
      }
      if (!bOneType) {
        tip.alert("先把补货的商品结算!");
        return;
      }
      wepy.navigateTo({
        url: "/pages/comfire_order?purchasetype=" + purType
      });
    },
    goIndex() {
      wepy.switchTab({
        url: "/pages/home"
      });
    },
    getCartListMethod() {
      this.getCartList();
    }
  };
  events = {};
}
</script>

<style lang="less">
.goods-list {
  display: flex;
  flex-direction: column;
  padding-bottom: 104rpx;
}
.goods-info {
  display: flex;
  margin-top: 48rpx;
  .icon_check {
    position: absolute;
    width: 100%;
    height: 165rpx;
    line-height: 165rpx;
  }
  .img-box {
    width: 160rpx;
    height: 160rpx;
    overflow: hidden;
    margin-right: 20rpx;
    background-color: #fff;
    margin-left: 100rpx;
  }
  .text-box {
    width: 440rpx;
    position: relative;
  }
  .text-box .goods-title {
    font-size: 28rpx;
    color: #000;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    padding: 10rpx 20rpx 5rpx 0;
  }
  .text-box .lable {
    font-size: 26rpx;
    color: #999;
    height: 38rpx;
    line-height: 38rpx;
    margin: 8rpx 0 25rpx 0;
  }
  .lable {
    display: flex;
    align-items: center;
    .goods-label {
      font-size: 26rpx;
    }
    .goods-lable {
      font-size: 26rpx;
    }
    .bo-label {
      font-size: 24rpx;
      background: #e64340;
      padding: 2rpx 10rpx;
      color: #fff;
      border-radius: 2rpx;
      margin-left: 10rpx;
    }
  }
  .text-box .goods-price {
    font-size: 26rpx;
    color: #e64340;
  }
  .text-box .buy-num {
    width: 164rpx;
    height: 48rpx;
    line-height: 48rpx;
    position: absolute;
    right: 30rpx;
    bottom: 0;
    display: flex;
    /*justify-content: space-between;*/
    font-size: 24rpx;
    text-align: center;
  }
  .text-box .buy-num .jian-btn {
    width: 48rpx;
    height: 100%;
    border-left: 1rpx solid #ccc;
    border-bottom: 1rpx solid #ccc;
    border-top: 1rpx solid #ccc;
    border-bottom-left-radius: 6rpx;
    border-top-left-radius: 6rpx;
  }
  .text-box .buy-num .jian-btn.disabled {
    background-color: #f5f5f9;
    border-left: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .text-box .buy-num .jia-btn {
    width: 48rpx;
    height: 100%;
    border-right: 1rpx solid #ccc;
    border-bottom: 1rpx solid #ccc;
    border-top: 1rpx solid #ccc;
    border-bottom-right-radius: 6rpx;
    border-top-right-radius: 6rpx;
  }
  .text-box .buy-num .jia-btn.disabled {
    background-color: #f5f5f9;
    border-right: 1rpx solid #eee;
    border-bottom: 1rpx solid #eee;
    border-top: 1rpx solid #eee;
    color: #ccc;
  }
  .text-box .buy-num input {
    width: 68rpx;
    height: 48rpx;
    min-height: 48rpx;
    text-align: center;
    font-size: 24rpx;
    border: 1rpx solid #ccc;
  }
  .img-box .img {
    width: 160rpx;
    height: 160rpx;
  }
}
.jiesuan-box {
  display: flex;
  justify-content: space-between;
  width: 100%;
  height: 100rpx;
  position: fixed;
  bottom: 0;
  left: 0;
  border-bottom: 1px solid #eee;
  border-top: 1px solid #eee;
  background-color: #fff;
  z-index: 9999;
}
.jiesuan-box .to-pay-btn {
  width: 240rpx;
  text-align: center;
  line-height: 100rpx;
  background-color: #e64340;
  font-size: 32rpx;
  color: #ffffff;
}
.jiesuan-box .to-pay-btn.no-select {
  background-color: #ccc;
}
.jiesuan-box .left-price {
  display: flex;
  width: 510rpx;
  justify-content: space-between;
  padding: 0 30rpx 0 20rpx;
  font-size: 28rpx;
  box-sizing: border-box;
  align-items: center;
}
.jiesuan-box .total {
  color: #e64340;
}
.list_box {
  height: 250rpx;
  margin-bottom: 8rpx;
}
.all_select_box {
  width: 200rpx;
  height: 100%;
  display: flex;
  align-items: center;
}
.all_select {
  flex: 1;
  padding-left: 10rpx;
}
.empty_cart {
  margin-top: 100rpx;
  .shop_btn {
    display: flex;
    width: 100%;
  }
  .block {
    margin: 0 auto;
    text-align: center;
    display: flex;
    align-items: center;
  }
  .btn_group {
    display: flex;
    align-items: center;
    padding-top: 100rpx;
    .btn {
      font-size: 30rpx;
      padding: 22rpx 55rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 10rpx;
      /* Firefox */
      -webkit-border-radius: 10rpx;
      /* Safari 和 Chrome */
      border-radius: 10rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
    }
    .get_store {
      background: #ed601b;
      color: #fff;
      margin-left: 1rpx;
    }
  }
}
.empty_cart_img {
  width: 220rpx;
  height: 177rpx;
  display: block;
  margin: 0 auto;
}
.empty_cart_text {
  font-size: 32rpx;
  color: #999;
  margin-top: 20rpx;
  text-align: center;
}
</style>
