<style lang="less">
.block {
  background: #fff;
}

.list_item {
  display: flex;
  align-items: center;
  border-top: 1px solid #efefef;
  padding: 35rpx 20rpx;
  .title {
    margin-right: 20rpx;
  }
  .input {
    flex: 1;
    input {
      color: #333;
    }
  }
}

.btn_box {
  margin-top: 64rpx;
  padding: 0 24rpx;
}
</style>
<template>
  <form bindsubmit="formSubmit">
    <view class="block">
      <view class="list_item">
        <view class="title">收货人姓名:</view>
        <view class="input">
          <input type="text" name="name" value="{{address.name}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">联系电话:</view>
        <view class="input">
          <input type="text" name="phone" value="{{address.phone}}"/>
        </view>
      </view>
      <view class="list_item">
        <view class="title">所在地区:</view>
        <view class="input">
          <view @tap="openAddressPicker">{{address.province ? address.province : '省'}} - {{address.city ? address.city : '市' }} - {{address.area ? address.area : '区' }}</view>
          <areaPicker @areaArray.user="areaPickerArray"></areaPicker>
        </view>
      </view>
      <view class="list_item">
        <view class="title">详细地址:</view>
        <view class="input">
          <input type="text" name="street" value="{{address.street}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">设置默认地址:</view>
        <view class="input tr" @tap="changeCheckBoxState">
          <icon type="success" size="20" color="{{address.isDefault? 'red':'#999'}}" />
        </view>
      </view>
    </view>
    <view class="btn_box">
      <button class="button type_red" formType="submit">修改</button>
    </view>
  </form>
</template>
<script>
import wepy from "wepy";
import tip from "@/utils/tip";
import api from "@/api/api";
import { USER_SPECICAL_INFO } from "@/utils/constant";
import AreaPicker from "./common/wepy-area-picker";
export default class AddressEdit extends wepy.component {
  data = {
    address: {}
  };

  components = {
    areaPicker: AreaPicker
  };

  async updateAddress() {
    const addressData = {
      _id: this.address._id,
      name: this.address.name,
      phone: this.address.phone,
      province: this.address.province,
      city: this.address.city,
      area: this.address.area,
      street: this.address.street,
      postcode: this.address.postcode,
      isDefault: this.address.isDefault
    };

    const json = await api.updateAddress({
      query: addressData,
      method: "PUT"
    });

    if (json.data.success) {
      this.$emit("currentPage", 0);
      this.$emit("refreshAddList", "");
    }

    this.showLoading = false;
  }
  methods = {
    changeCheckBoxState() {
      this.address.isDefault = !this.address.isDefault;
    },

    refresh(addressData) {
      this.address = addressData;
      this.$apply();
    },
    formSubmit(e) {
      this.address.name = e.detail.value.name;
      this.address.phone = e.detail.value.phone;
      this.address.street = e.detail.value.street;
      this.updateAddress();
    },
    openAddressPicker() {
      this.$invoke("areaPicker", "openAddressPicker");
    },
    areaPickerArray(province, city, area) {
      this.address.province = province.name;
      this.address.city = city.name;
      this.address.area = area.name;
      this.address.postcode = area.code || city.code || province.code;

      this.$apply();
    }
  };

  onShow() {
    // this.$invoke(
    //   "areaPicker",
    //   "setAddressPickerValue",
    //   this.province,
    //   this.city,
    //   this.area
    // );
  }
}
</script>
