<!--订单列表模块-->
<template>
<view class="order_item">
<repeat for="{{orderList}}">
  <view class="list" wx:key="index">
    <navigator class="item_content" url="/pages/order_detail?id={{item._id}}">
      <view class="order_list_top">
        <view class="left">
          <view class="title">订单号：
            <text class="order_doc">{{item._id}}</text>
          </view>
          <view class="title mt10">提交时间：
            <text class="order_doc">{{item.created_at}}</text>
          </view>
        </view>
        <view>
          <view class="order_state" wx:if="{{item.status==='WAIT_BUYER_PAY'}}">{{orderExpired ? '订单关闭' : '待付款'}}</view>
          <view class="order_state" wx:if="{{item.status==='WAIT_SELLER_SEND_GOODS'}}">待发货</view>
          <view class="order_state" wx:if="{{item.status==='WAIT_BUYER_CONFIRM_GOODS'}}">待收货</view>
          <view class="order_state" wx:if="{{item.status==='TRADE_FINISHED'}}">已完成</view>
        </view>
    </view>

    <view class="order_list_center">
      <shopItemList :list.sync="item.packages"></shopItemList>
    </view>
  </navigator>
  <view class="order_list_footer">
      <view class="btn_group">
        <view class="btn btn_pay" @tap="payMoney" data-id="{{item._id}}" wx:if="{{item.status==='WAIT_BUYER_PAY'}}">立即付款</view>
        <view class="btn"  wx:if="{{item.status==='WAIT_SELLER_SEND_GOODS'}}">催发货</view>
        <view class="btn" data-id="{{item._id}}" wx:if="{{item.status==='WAIT_BUYER_CONFIRM_GOODS'}}">确认收货</view>
      </view>
  </view>

  </view>
</repeat>
</view>
</template>
<script>
import wepy from "wepy";
import tip from "@/utils/tip";
import ShopItemList from "@/components/shop_item_list";
import api from "@/api/api";
import { SYSTEM_INFO, USER_SPECICAL_INFO } from "@/utils/constant";
export default class orderItem extends wepy.component {
  props = {
    orderList: {
      type: Object,
      default: []
    }
  };

  components = {
    shopItemList: ShopItemList
  };

  computed = {};

  async wechatPay(order_id) {
    const json = await api.getPayParams({
      query: {
        order_id: order_id
      }
    });

    const paydata = json.data;
    if (paydata.success) {
      const params = paydata.params;
      try {
        let requestPayment = await wepy.requestPayment({
          timeStamp: params.timeStamp,
          nonceStr: params.nonceStr,
          package: params.package,
          signType: "MD5",
          paySign: params.paySign
        });
        if (requestPayment.errMsg === "requestPayment:ok") {
          tip.success("支付成功");
          wepy.redirectTo({
            url: "/pages/order?tab=0"
          });
        }
      } catch (error) {
        if (error.errMsg === "requestPayment:fail cancel") {
          tip.error("取消支付");
          wepy.redirectTo({
            url: "/pages/order?tab=1"
          });
        } else {
          tip.error("出错了");
          this.disablePayButton = false;
          this.$apply();
        }
      }
    } else {
      tip.error("出错了");
      this.disablePayButton = false;
      this.$apply();
    }
  }

  methods = {
    payMoney(event) {
      const id = event.target.dataset.id;
      this.wechatPay(id);
    }
  };
}
</script>
<style lang="less">
.order_item {
  padding: 10rpx 0rpx;
  background: #f7f7f7;
  margin-bottom: 30rpx;
  .title {
    font-size: 26rpx;
    color: #333;
  }
  .order_doc {
    font-size: 26rpx;
    color: #808080;
  }
  .mt10 {
    margin-top: 10rpx;
  }
  .order_state {
    color: #ff4856;
    font-size: 32rpx;
  }
  .order_list_top {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  .order_list_footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20rpx;
    .num {
      color: #ff4856;
    }
  }
  .order_list_top {
    padding-bottom: 26rpx;
    border-bottom: 1px solid #efefef;
  }
  .list {
    background: #fff;
    padding: 30rpx;
    margin-top: 15rpx;
  }
  .btn_group {
    display: flex;
    align-items: center;
    .btn {
      font-size: 30rpx;
      padding: 16rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      border-radius: 5rpx;
      border:1px solid #ff4856;
      color: #ff4856;
    }
    .btn_del {
      color: #333;
      border: 1px solid #ccc;
    }
    .btn_pay {
      background: #ff4856;
      color: #fff;
      margin-left: 20rpx;
    }
  }
}
</style>
