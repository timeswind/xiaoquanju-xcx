<style lang="less">
@import "./styles/base";
@import "./styles/icon";
@import "./styles/style";
</style>
<script>
import wepy from "wepy";
import "wepy-async-function";
import { TAGTRACK_ID, USER_SPECICAL_INFO,USER_INFO,SYSTEM_INFO } from "@/utils/constant";
import api from "@/api/api";

export default class extends wepy.app {
  config = {
    pages: [
      "pages/home",
      "pages/home_detail",
      "pages/classify",
      "pages/shop_cart",
      "pages/info",
      "pages/search",
      "pages/test",
      "pages/sign_in",
      "pages/exchange_goods",
      "pages/wholesale",
      "pages/replenishment_goods",
      "pages/register",
      "pages/order",
      "pages/reorder",
      "pages/pay_success",
      "pages/points",
      "pages/points_more",
      "pages/points_rule",
      "pages/collection",
      "pages/messages",
      "pages/setting",
      "pages/goods_detail",
      "pages/comfire_order",
      "pages/address",
      "pages/order_detail",
      "pages/filter",
      "pages/logistics",
      "pages/comment",
      "pages/comment_add",
      "pages/authorize"
    ],
    window: {
      backgroundTextStyle: "dark",
      navigationBarBackgroundColor: "#FFFFFF",
      navigationBarTitleText: "WeChat",
      navigationBarTextStyle: "black",
      enablePullDownRefresh: false,
      backgroundColor: "#EFEFEF"
    },
    tabBar: {
      color: "#999999",
      selectedColor: "#ff6a3c",
      backgroundColor: "#ffffff",
      borderStyle: "black",
      list: [
        {
          pagePath: "pages/home",
          text: "首页"
        },
        {
          pagePath: "pages/classify",
          text: "分类"
        },
        {
          pagePath: "pages/shop_cart",
          text: "购物车"
        },
        {
          pagePath: "pages/info",
          text: "我"
        }
      ]
    },
    plugins: {
      wxparserPlugin: {
        version: "0.1.0",
        provider: "wx9d4d4ffa781ff3ac"
      }
    }
  };

  globalData = {};

  constructor() {
    super();
    this.use("requestfix");
    this.use("promisify");
  }

  async onLaunch(option) {
    console.log(option);
    var that = this
    if ("tagtrack" in option.query) {
      wepy.setStorageSync(TAGTRACK_ID, option.query.tagtrack);
    }
    let res = await wepy.getSetting();
    console.log(res.authSetting["scope.userInfo"])
    if (res.authSetting["scope.userInfo"]) {
      wx.getUserInfo({
        success: function(res) {
          that.login(res.userInfo);
        }
      });
    } else {
      wepy.navigateTo({
        url: "/pages/authorize"
      });
    }
  }

  async login(userInfo) {
    let login = await wepy.login();
    let js_code = login.code;
    let systemInfo = wepy.getSystemInfoSync();
    wepy.setStorageSync(USER_INFO, userInfo);
    wepy.setStorageSync(SYSTEM_INFO, systemInfo);
    let auth = await api.wxJsCode2Token({
      query: {
        js_code: js_code,
        userInfo: userInfo,
        union_tagtrack_id: wepy.getStorageSync(TAGTRACK_ID) || ""
      }
    });
    if (auth.data.success) {
      if (auth.data.wx_openid && auth.data.wx_unionid) {
        wepy.setStorageSync(USER_SPECICAL_INFO, auth.data);
      }
    }
  }
}
</script>
